[package]
name = "doc-ingest"
version = "0.1.0"
edition = "2021"
authors = ["DAA Neural Coordinator"]
description = "High-performance document ingestion and processing with DAA coordination and neural enhancement"

[workspace]
members = [
    "neural-doc-flow-core",
    "neural-doc-flow-coordination",
    "neural-doc-flow-processors",
    "neural-doc-flow-sources",
    "neural-doc-flow-outputs",
    "neural-doc-flow",
    "neural-doc-flow-security",
    "neural-doc-flow-plugins",
    "neural-doc-flow-python",
    "neural-doc-flow-wasm",
    "neural-doc-flow-api"
]
resolver = "2"
exclude = [
    "target/*",
    "**/target/*"
]

[workspace.package]
edition = "2021"
authors = ["DAA Neural Coordinator"]
version = "0.1.0"
homepage = "https://github.com/daa-neural/doc-ingest"
repository = "https://github.com/daa-neural/doc-ingest"
license = "MIT"
documentation = "https://docs.rs/neural-doc-flow"
keywords = ["document", "neural", "processing", "extraction", "daa"]
categories = ["text-processing", "science"]

[workspace.dependencies]
# Core async and error handling - unified versions
tokio = { version = "1.46", features = ["full"] }
anyhow = "1.0"
thiserror = "1.0"

# Serialization - unified versions
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
bincode = "1.3"
toml = "0.8"
uuid = { version = "1.0", features = ["v4", "serde"] }
chrono = { version = "0.4", features = ["serde"] }

# Logging and tracing
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"] }

# Async traits and utilities
async-trait = "0.1"
futures = "0.3"

# Concurrency - aligned versions
rayon = "1.10"
crossbeam = "0.8"
parking_lot = "0.12"
dashmap = "5.5"

# Metrics and monitoring
metrics = "0.21"
opentelemetry = "0.21"
prometheus = "0.13"

# Text processing
regex = "1.0"
unicode-normalization = "0.1"
aho-corasick = "1.1"

# System utilities
num_cpus = "1.0"

# Memory and performance
ndarray = "0.15"
bytes = "1.5"

# Dev dependencies
criterion = { version = "0.5", features = ["html_reports"] }
proptest = "1.0"
tempfile = "3.0"
test-log = "0.2"
pretty_assertions = "1.4"
tokio-test = "0.4"

# SIMD dependencies
wide = "0.7"
bytemuck = "1.13"

# Pure Rust WASM dependencies (no JavaScript runtime)
console_error_panic_hook = "0.1"
wee_alloc = "0.4"

# Web server dependencies - unified to single versions
axum = "0.7"
tower = "0.5"
tower-http = { version = "0.5", features = ["cors", "trace", "timeout", "compression-gzip", "fs"] }
hyper = "1.6"
http = "1.3"
tokio-util = "0.7"
multipart = "0.18"
validator = { version = "0.16", features = ["derive"] }
utoipa = { version = "4.0", features = ["axum_extras"] }
utoipa-swagger-ui = { version = "4.0", features = ["axum"] }
jsonwebtoken = "9.0"
argon2 = "0.5"
base64 = "0.21"
md5 = "0.7"
sqlx = { version = "0.7", features = ["runtime-tokio-rustls", "sqlite", "chrono", "uuid"] }
config = "0.14"
clap = { version = "4.0", features = ["derive", "env"] }
governor = "0.6"
mime = "0.3"
mime_guess = "2.0"
tokio-cron-scheduler = "0.9"
reqwest = { version = "0.11", features = ["json"] }

# Unix/Linux system utilities
nix = { version = "0.27", features = ["process", "signal", "user", "resource", "sched", "mount"] }

# Neural processing dependencies - Pure Rust with ruv-FANN
ruv-fann = { version = "0.1.6" }

# Document processing
pdf-extract = { version = "0.7" }
lopdf = { version = "0.34" }
scraper = { version = "0.17" }
pulldown-cmark = { version = "0.9" }
tera = { version = "1.19" }
printpdf = { version = "0.5" }
quick-xml = { version = "0.31" }

# Security dependencies
sha2 = "0.10"
blake3 = "1.5"
ring = "0.17"
ed25519-dalek = "2.0"
hex = "0.4"
rand = "0.8"
semver = "1.0"
libloading = "0.8"
dlopen2 = "0.7"
notify = "6.1"
zip = "0.6"
roxmltree = "0.19"
image = { version = "0.24" }

# Additional frequently used dependencies
lru = "0.12"
caps = "0.5"
libc = "0.2"

[dependencies]
# Core async and error handling
tokio = { workspace = true }
anyhow = { workspace = true }
thiserror = { workspace = true }

# Serialization
serde = { workspace = true }
serde_json = { workspace = true }
uuid = { workspace = true }
chrono = { workspace = true }

# Logging
tracing = { workspace = true }
tracing-subscriber = { workspace = true }

# Text processing
regex = { workspace = true }

# Local workspace dependencies
neural-doc-flow-core = { path = "neural-doc-flow-core" }
neural-doc-flow-coordination = { path = "neural-doc-flow-coordination" }
neural-doc-flow-processors = { path = "neural-doc-flow-processors" }

# Neural processing dependencies - Pure Rust with ruv-FANN
ruv-fann = { version = "0.1.6", optional = true }

# SIMD dependencies
wide = { version = "0.7", optional = true }

# Performance monitoring
prometheus = { version = "0.13", optional = true }
metrics = { version = "0.21", optional = true }

# Performance utilities
rayon = { version = "1.10", optional = true }
crossbeam = { version = "0.8", optional = true }
crossbeam-channel = "0.5"
parking_lot = { version = "0.12", optional = true }
dashmap = { version = "5.5", optional = true }
async-trait = { workspace = true }
reqwest = { workspace = true }
num_cpus = { workspace = true }
serde_yaml = "0.9"

[features]
default = ["monitoring", "performance"]
neural = ["ruv-fann"]
monitoring = ["prometheus", "metrics"]
simd = ["wide"]
performance = ["rayon", "crossbeam", "parking_lot"]
full = ["neural", "monitoring", "performance", "simd"]

[profile.release]
lto = "thin"  # Use thin LTO for faster builds
codegen-units = 4  # Allow some parallelism for better build times
panic = "abort"
opt-level = 3
strip = true  # Strip symbols for smaller binaries

[profile.dev]
opt-level = 1
debug = 1  # Reduced debug info for faster builds
incremental = true

[profile.test]
opt-level = 1
inherits = "dev"

# Fast build profile for development
[profile.dev-fast]
inherits = "dev"
opt-level = 0
debug = false
incremental = true

# Optimized for CI builds
[profile.ci]
inherits = "release"
lto = false
codegen-units = 16
debug = false

[[bin]]
name = "doc-ingest-server"
path = "src/bin/server.rs"

[[bin]]
name = "doc-ingest-cli"
path = "src/bin/cli.rs"

[[example]]
name = "neural_processing_demo"
path = "examples/neural_processing.rs"

[[example]]
name = "daa_coordination_demo" 
path = "examples/daa_coordination.rs"

[dev-dependencies]
criterion = { version = "0.5", features = ["html_reports"] }
tempfile = "3.0"
proptest = "1.0"
tokio-test = "0.4"

[[bench]]
name = "neural_performance"
harness = false

[[bench]]
name = "coordination_performance"
harness = false

[[bench]]
name = "simd_performance_benchmarks"
harness = false
