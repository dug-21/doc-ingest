[package]
name = "neural-doc-flow-coordination"
version.workspace = true
edition.workspace = true
authors.workspace = true
license.workspace = true
repository.workspace = true
homepage.workspace = true
documentation.workspace = true
description = "Distributed Agent Architecture coordination for neural document processing"
keywords.workspace = true
categories.workspace = true

[dependencies]
# Core async and error handling
tokio = { workspace = true }
async-trait = { workspace = true }
futures = { workspace = true }

# Serialization
serde = { workspace = true, optional = true }
serde_json = { workspace = true, optional = true }
uuid = { workspace = true, optional = true }
chrono = { workspace = true, optional = true }

# Error handling
anyhow = { workspace = true }
thiserror = { workspace = true }

# Logging
tracing = { workspace = true }

# Text processing
regex = { workspace = true }

# High-performance coordination features (feature-gated)
crossbeam = { workspace = true, optional = true }
parking_lot = { workspace = true, optional = true }
dashmap = { workspace = true, optional = true }
rayon = { workspace = true, optional = true }

# Core dependency
neural-doc-flow-core = { path = "../neural-doc-flow-core" }

# Performance monitoring
metrics = { workspace = true, optional = true }

# Analytics and specialized features (feature-gated)
lru = { workspace = true, optional = true }
rand = { workspace = true, optional = true }
md5 = { workspace = true, optional = true }

[features]
default = ["minimal"]

# Core feature sets for faster compilation
minimal = ["serde", "serde_json", "uuid", "chrono", "messaging", "analytics"]
performance = ["minimal", "rayon", "crossbeam", "parking_lot"]
full = ["performance", "monitoring", "messaging", "fault-tolerance", "analytics"]

# Feature-gated modules for compilation speed
messaging = ["dashmap"]
fault-tolerance = []
monitoring = ["metrics"]
analytics = ["lru"]

# Development and testing features
dev-full = ["full"]
test-utils = []

[lib]
name = "neural_doc_flow_coordination"
path = "lib.rs"